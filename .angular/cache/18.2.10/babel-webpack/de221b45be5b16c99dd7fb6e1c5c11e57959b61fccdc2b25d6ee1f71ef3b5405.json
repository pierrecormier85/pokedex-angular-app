{"ast":null,"code":"import { PokemonService } from '../shared/pokemon.service';\nimport { VirtualScrollerComponent } from 'ngx-virtual-scroller';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../shared/pokemon.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"ngx-virtual-scroller\";\nimport * as i7 from \"./pokemon-item/pokemon-item.component\";\nimport * as i8 from \"../search-filter.pipe\";\nconst _c0 = a0 => ({\n  fade: a0\n});\nfunction PokemonListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 6);\n    i0.ɵɵtext(2, \"Masquer capturer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 7);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function PokemonListComponent_div_2_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.masquerCapture, $event) || (ctx_r1.masquerCapture = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"change\", function PokemonListComponent_div_2_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.checkMasquerCapture($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.masquerCapture);\n  }\n}\nfunction PokemonListComponent_app_pokemon_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-pokemon-item\", 8);\n  }\n  if (rf & 2) {\n    const pokemon_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pokemon\", pokemon_r3)(\"region\", ctx_r1.regionPokedex)(\"pokemonsCapture\", ctx_r1.pokemonsCapture);\n  }\n}\nexport let PokemonListComponent = /*#__PURE__*/(() => {\n  class PokemonListComponent {\n    onWindowResize() {\n      // debounce resize, wait for resize to finish before doing stuff\n      if (this.resizeTimeout) {\n        clearTimeout(this.resizeTimeout);\n      }\n      this.resizeTimeout = setTimeout((() => {\n        this.virtualScroller.invalidateCachedMeasurementAtIndex(0);\n      }).bind(this), 500);\n    }\n    constructor(http, activatedRoute, pokemonService) {\n      this.http = http;\n      this.activatedRoute = activatedRoute;\n      this.pokemonService = pokemonService;\n      this.pokemons = [];\n      this.pokemonsCapture = [];\n      this.scrolled = true;\n      this.resizeTimeout = 250;\n      this.masquerCapture = false;\n      this.pokemonService.previousPokemonID.subscribe(response => {\n        this.scrolled = false;\n        this.focusOnAnItem(response);\n      });\n    }\n    ngOnInit() {\n      this.activatedRoute.params.subscribe(params => {\n        this.regionPokedex = params['region'];\n        this.initPokemonList();\n        if (this.regionPokedex) {\n          this.pokemonsCapture = JSON.parse(localStorage.getItem(this.regionPokedex));\n        }\n      });\n    }\n    initPokemonList() {\n      if (this.pokemonService.pokemons[0]) {\n        // List already loaded\n        this.pokemons = this.pokemonService.pokemons.filter(pokemon => this.getIdRegional(pokemon)).sort((a, b) => this.getIdRegional(a) - this.getIdRegional(b));\n        this.noOfPokemonLoaded = this.pokemonService.noOfPokemonsLoaded;\n      } else {\n        // List not already Loaded\n        this.pokemonListSubscription = this.pokemonService.pokemonsListChanged.subscribe(response => {\n          this.pokemons = response.slice(0, this.noOfPokemonLoaded).filter(pokemon => this.getIdRegional(pokemon)).sort((a, b) => this.getIdRegional(a) - this.getIdRegional(b));\n        });\n        this.noOfLoadedPokemonSubscription = this.pokemonService.newPokemonsLoaded.subscribe(response => {\n          this.noOfPokemonLoaded = response;\n        });\n      }\n      this.searchItemSubscription = this.pokemonService.searchItemSubject.subscribe(response => {\n        this.searchItem = response;\n      });\n    }\n    focusOnAnItem(index) {\n      this.virtualScroller.scrollToIndex(index, undefined, -192, 0);\n      setTimeout(() => {\n        this.scrolled = true;\n      }, 250); // Delay to allow the fade in animation to take place\n    }\n    trackByPokemonID(index, pokemon) {\n      return pokemon.id;\n    }\n    ngOnDestroy() {\n      this.pokemonService.searchItemSubject.next('');\n      this.searchItemSubscription.unsubscribe();\n    }\n    getIdRegional(pokemon) {\n      switch (this.regionPokedex) {\n        case 'galar':\n          const galar = pokemon.pokedex.find(pokedex => pokedex.region === 'galar');\n          return galar ? galar.id : undefined;\n        case 'isolarmure':\n          const isolarmure = pokemon.pokedex.find(pokedex => pokedex.region === 'isle-of-armor');\n          return isolarmure ? isolarmure.id : undefined;\n        case 'couronneige':\n          const couronneige = pokemon.pokedex.find(pokedex => pokedex.region === 'crown-tundra');\n          return couronneige ? couronneige.id : undefined;\n        default:\n          return pokemon.id;\n      }\n    }\n    checkMasquerCapture(values) {\n      if (values.currentTarget.checked) {\n        this.pokemons = this.pokemonService.pokemons.filter(pokemon => this.getIdRegional(pokemon)).filter(pokemon => !this.isPokemonCapture(pokemon)).sort((a, b) => this.getIdRegional(a) - this.getIdRegional(b));\n      } else {\n        this.pokemons = this.pokemonService.pokemons.filter(pokemon => this.getIdRegional(pokemon)).sort((a, b) => this.getIdRegional(a) - this.getIdRegional(b));\n      }\n      this.pokemonService.versionSwitchSubscription.next(values.currentTarget.checked);\n    }\n    isPokemonCapture(pokemon) {\n      let isPokemonCapture = false;\n      if (this.pokemonsCapture) {\n        const pokemonCapture = this.pokemonsCapture.find(pc => pc.id === this.getIdRegional(pokemon));\n        isPokemonCapture = pokemonCapture ? pokemonCapture.capture : false;\n      }\n      return isPokemonCapture;\n    }\n    static #_ = (() => this.ɵfac = function PokemonListComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PokemonListComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.PokemonService));\n    })();\n    static #_2 = (() => this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PokemonListComponent,\n      selectors: [[\"app-pokemon-list\"]],\n      viewQuery: function PokemonListComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(VirtualScrollerComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.virtualScroller = _t.first);\n        }\n      },\n      hostBindings: function PokemonListComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"resize\", function PokemonListComponent_resize_HostBindingHandler() {\n            return ctx.onWindowResize();\n          }, false, i0.ɵɵresolveWindow);\n        }\n      },\n      decls: 7,\n      vars: 11,\n      consts: [[\"scrollingBlock\", \"\"], [\"scroll\", \"\"], [1, \"pokemon-list\", \"faded\", 3, \"ngClass\"], [4, \"ngIf\"], [\"scrollAnimationTime\", \"0\", 3, \"items\", \"parentScroll\"], [3, \"pokemon\", \"region\", \"pokemonsCapture\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"for\", \"masquerCapture\", 2, \"font-size\", \"medium\", \"margin-right\", \"10px\"], [\"id\", \"masquerCapture\", \"type\", \"checkbox\", \"checked\", \"\", \"name\", \"versionSwitch\", 1, \"switch\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [3, \"pokemon\", \"region\", \"pokemonsCapture\"]],\n      template: function PokemonListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 2, 0);\n          i0.ɵɵtemplate(2, PokemonListComponent_div_2_Template, 4, 1, \"div\", 3);\n          i0.ɵɵelementStart(3, \"virtual-scroller\", 4, 1);\n          i0.ɵɵpipe(5, \"searchFilter\");\n          i0.ɵɵtemplate(6, PokemonListComponent_app_pokemon_item_6_Template, 1, 3, \"app-pokemon-item\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          const scrollingBlock_r4 = i0.ɵɵreference(1);\n          const scroll_r5 = i0.ɵɵreference(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.scrolled));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.regionPokedex);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"items\", i0.ɵɵpipeBind2(5, 6, ctx.pokemons, ctx.searchItem))(\"parentScroll\", scrollingBlock_r4);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", scroll_r5.viewPortItems)(\"ngForTrackBy\", ctx.trackByPokemonID);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i5.CheckboxControlValueAccessor, i5.NgControlStatus, i5.NgModel, i6.VirtualScrollerComponent, i7.PokemonItemComponent, i8.SearchFilterPipe],\n      styles: [\"virtual-scroller[_ngcontent-%COMP%]{display:flex;flex:auto;flex-direction:column;height:calc(100vh - 64px);text-align:center}.pokemon-list[_ngcontent-%COMP%]{will-change:scroll-position;margin-left:-15px;margin-right:-15px}.scrollable-content[_ngcontent-%COMP%]{will-change:scroll-position}app-pokemon-item[_ngcontent-%COMP%]{display:inline-block}.faded[_ngcontent-%COMP%]{opacity:0}.fade[_ngcontent-%COMP%]{opacity:1;transition:opacity .5s ease-in-out}@media (max-width: 575px){virtual-scroller[_ngcontent-%COMP%]{height:calc(100vh - 40px)}}@media (max-width: 316px){virtual-scroller[_ngcontent-%COMP%]{height:calc(100vh - 36.8px)}}@media (max-width: 270px){virtual-scroller[_ngcontent-%COMP%]{height:calc(100vh - 32px)}}.switch[_ngcontent-%COMP%]{margin-top:1px}@supports (-webkit-appearance: none) or (-moz-appearance: none){input[type=checkbox][_ngcontent-%COMP%], input[type=radio][_ngcontent-%COMP%]{--active: gray;--active-inner: #fff;--focus: 2px black;--border: gray;--border-hover: black;--background: #fff;--disabled: #F6F8FF;--disabled-inner: #E1E6F9;-webkit-appearance:none;-moz-appearance:none;height:21px;outline:none;display:inline-block;vertical-align:top;position:relative;margin:0;cursor:pointer;border:1px solid var(--bc, var(--border));background:var(--b, var(--background));transition:background .3s,border-color .3s,box-shadow .2s}input[type=checkbox][_ngcontent-%COMP%]:after, input[type=radio][_ngcontent-%COMP%]:after{content:\\\"\\\";display:block;left:0;top:0;position:absolute;transition:transform var(--d-t, .3s) var(--d-t-e, ease),opacity var(--d-o, .2s)}input[type=checkbox][_ngcontent-%COMP%]:checked, input[type=radio][_ngcontent-%COMP%]:checked{--b: var(--active);--bc: var(--active);--d-o: .3s;--d-t: .6s;--d-t-e: cubic-bezier(.2, .85, .32, 1.2)}input[type=checkbox][_ngcontent-%COMP%]:disabled, input[type=radio][_ngcontent-%COMP%]:disabled{--b: var(--disabled);cursor:not-allowed;opacity:.9}input[type=checkbox][_ngcontent-%COMP%]:disabled:checked, input[type=radio][_ngcontent-%COMP%]:disabled:checked{--b: var(--disabled-inner);--bc: var(--border)}input[type=checkbox][_ngcontent-%COMP%]:disabled + label[_ngcontent-%COMP%], input[type=radio][_ngcontent-%COMP%]:disabled + label[_ngcontent-%COMP%]{cursor:not-allowed}input[type=checkbox][_ngcontent-%COMP%]:hover:not(:checked):not(:disabled), input[type=radio][_ngcontent-%COMP%]:hover:not(:checked):not(:disabled){--bc: var(--border-hover)}input[type=checkbox][_ngcontent-%COMP%]:focus, input[type=radio][_ngcontent-%COMP%]:focus{box-shadow:0 0 0 var(--focus)}input[type=checkbox][_ngcontent-%COMP%]:not(.switch), input[type=radio][_ngcontent-%COMP%]:not(.switch){width:21px}input[type=checkbox][_ngcontent-%COMP%]:not(.switch):after, input[type=radio][_ngcontent-%COMP%]:not(.switch):after{opacity:var(--o, 0)}input[type=checkbox][_ngcontent-%COMP%]:not(.switch):checked, input[type=radio][_ngcontent-%COMP%]:not(.switch):checked{--o: 1}input[type=checkbox][_ngcontent-%COMP%] + label[_ngcontent-%COMP%], input[type=radio][_ngcontent-%COMP%] + label[_ngcontent-%COMP%]{font-size:14px;line-height:21px;display:inline-block;vertical-align:top;cursor:pointer;margin-left:4px}input[type=checkbox][_ngcontent-%COMP%]:not(.switch){border-radius:7px}input[type=checkbox][_ngcontent-%COMP%]:not(.switch):after{width:5px;height:9px;border:2px solid var(--active-inner);border-top:0;border-left:0;left:7px;top:4px;transform:rotate(var(--r, 20deg))}input[type=checkbox][_ngcontent-%COMP%]:not(.switch):checked{--r: 43deg}input[type=checkbox].switch[_ngcontent-%COMP%]{width:38px;border-radius:11px}input[type=checkbox].switch[_ngcontent-%COMP%]:after{left:2px;top:2px;border-radius:50%;width:15px;height:15px;background:var(--ab, var(--border));transform:translate(var(--x, 0))}input[type=checkbox].switch[_ngcontent-%COMP%]:checked{--ab: var(--active-inner);--x: 17px}input[type=checkbox].switch[_ngcontent-%COMP%]:disabled:not(:checked):after{opacity:.6}input[type=radio][_ngcontent-%COMP%]{border-radius:50%}input[type=radio][_ngcontent-%COMP%]:after{width:19px;height:19px;border-radius:50%;background:var(--active-inner);opacity:0;transform:scale(var(--s, .7))}input[type=radio][_ngcontent-%COMP%]:checked{--s: .5}}\"]\n    }))();\n  }\n  return PokemonListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}